---
import Tecnologias from "./Tecnologias.astro";
import IconMagic from "../assets/IconMagic.svg?inline";
---

<footer
  class="bg-white p-3 w-full flex justify-center gap-4 items-center text-xs relative"
>
  <div>
    <button
      id="tecnologias-toggle-button"
      class="bg-neutral-50 text-neutral-600 px-12 py-2 rounded-lg ring-1 ring-neutral-300 relative max-w-48 min-w-36 text-center flex justify-center items-center overflow-hidden text-ellipsis whitespace-nowrap"
      >Tecnologias</button
    >
    <Tecnologias id="tecnologias-modal" />
  </div>
  <div>
    <button
      id="generate-button"
      class="bg-neutral-800 text-neutral-50 px-12 py-2 rounded-lg max-w-48 min-w-36 flex items-center justify-center"
    >
      <img src={IconMagic} alt="Magic Icon" class="w-4 h-4 inline-block mr-2" />
      <span id="generate-button-text">Generate</span>
    </button>
  </div>
</footer>

<script>
  // Declarar las propiedades que esperamos en el objeto window
  declare global {
    interface Window {
      currentSelectedTechnologies?: { leftTec?: string; rightTec?: string };
    }
  }

  const tecnologiasButton = document.getElementById(
    "tecnologias-toggle-button"
  ) as HTMLButtonElement | null;
  const tecnologiasModal = document.getElementById(
    "tecnologias-modal"
  ) as HTMLDivElement | null;

  let currentlySelectedOptionElement: HTMLElement | null = null;

  if (tecnologiasButton && tecnologiasModal) {
    // --- Lógica para abrir/cerrar el modal ---
    tecnologiasButton.addEventListener("click", (event) => {
      event.stopPropagation();
      tecnologiasModal.classList.toggle("hidden");
      if (!tecnologiasModal.classList.contains("hidden")) {
        tecnologiasModal.classList.add("flex");
      } else {
        tecnologiasModal.classList.remove("flex");
      }
    });

    document.addEventListener("click", (event) => {
      if (
        !tecnologiasModal.classList.contains("hidden") &&
        !tecnologiasModal.contains(event.target as Node) &&
        event.target !== tecnologiasButton
      ) {
        tecnologiasModal.classList.add("hidden");
        tecnologiasModal.classList.remove("flex");
      }
    });

    // --- Lógica para manejar el clic en las opciones del modal ---
    const tecnologiaOptions = tecnologiasModal.querySelectorAll(
      ".tecnologia-option"
    ) as NodeListOf<HTMLElement>;

    // Función para actualizar el estado visual de selección
    function updateSelection(selectedOptionElement: HTMLElement) {
      // 1. Quitar selección de la opción anterior (si existe)
      if (
        currentlySelectedOptionElement &&
        currentlySelectedOptionElement !== selectedOptionElement
      ) {
        const prevStarIndicator = currentlySelectedOptionElement.querySelector(
          ".selected-star-indicator"
        );
        if (prevStarIndicator) {
          prevStarIndicator.classList.add("hidden");
        }
        currentlySelectedOptionElement.classList.remove("bg-neutral-200");
      }

      // 2. Aplicar selección a la nueva opción
      const currentStarIndicator = selectedOptionElement.querySelector(
        ".selected-star-indicator"
      );
      if (currentStarIndicator) {
        currentStarIndicator.classList.remove("hidden");
      }
      // selectedOptionElement.classList.add('bg-neutral-200'); // Descomenta si quieres fondo

      // 3. Actualizar el texto del botón principal
      const optionText = selectedOptionElement.dataset.optionText;
      if (optionText && tecnologiasButton) {
        tecnologiasButton.textContent = optionText;
      }

      // 4. Actualizar la referencia a la opción seleccionada
      currentlySelectedOptionElement = selectedOptionElement;

      // 5. Guardar las tecnologías seleccionadas en window
      const leftTec = selectedOptionElement.dataset.leftTec;
      const rightTec = selectedOptionElement.dataset.rightTec;

      if (leftTec && rightTec) {
        window.currentSelectedTechnologies = {
          leftTec: leftTec,
          rightTec: rightTec,
        };
        console.log(
          "Technologies saved to window:",
          window.currentSelectedTechnologies
        );
      }
    }

    // Establecer la primera opción como seleccionada por defecto al cargar
    if (tecnologiaOptions.length > 0) {
      updateSelection(tecnologiaOptions[0]);
    }

    // Event listener para cada opción
    tecnologiaOptions.forEach((optionElement) => {
      optionElement.addEventListener("click", () => {
        updateSelection(optionElement);
        // Cerrar el modal después de la selección
        tecnologiasModal.classList.add("hidden");
        tecnologiasModal.classList.remove("flex");
      });
    });
  }
</script>
